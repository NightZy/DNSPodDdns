#!/bin/sh

#################################################
# AnripDdns v5.08
# 基于DNSPod用户API实现的动态域名客户端
# 作者: 若海[mail@anrip.com]
# 介绍: http://www.anrip.com/ddnspod
# 时间: 2016-02-24 16:25:00
# Mod: 荒野无灯 http://ihacklog.com  2016-03-16
# ReMod: 寒霜 https://www.frost.net.cn 2018-12-06
# Remod(2): 无名萌新 2020-03-24
#################################################

# 使用Token认证 请去 https://www.dnspod.cn/console/user/security 获取
arToken="23745,b55b4692822de38a8d0955bc66bbfc5a"

# 获得外网ipv4地址
arIpAdress() {
    local ipv4=$(ip addr show ppp0 | grep 'inet ')
	ipv4=${ipv4#*inet }
	ipv4=${ipv4% peer*}
	echo ${ipv4}
}

# 获得外网ipv6地址
arIpAdress_v6() {
    local ipv6=$(ip addr show br0 | grep 'inet6 [^f]')
	ipv6=${ipv6#*inet6 }
	ipv6=${ipv6%/*}
	echo ${ipv6}
}

# 读取接口数据
# 参数: 接口类型 Post数据
arApiPost() {
    local agent="AnripDdns/5.07(mail@anrip.com)"
    local inter="https://dnsapi.cn/${1:?'Info.Version'}"
    local param="login_token=${arToken}&format=json&${2}"
    local ret=$(wget --quiet --no-check-certificate --output-document=- --user-agent=$agent --post-data $param $inter)
    if [ -z "$ret" ]; then
        echo "wget error"
    else
        echo $ret
    fi
}

# 获得ID与初步数据
getIDs() {
    domainID=$(arApiPost "Domain.Info" "domain=${domain}"|sed 's/.\+{"id":"\([0-9]\+\)".\+/\1/')
    returnDatav4=$(arApiPost "Record.List" "domain_id=${domainID}&sub_domain=${subdomainv4}")
    returnDatav6=$(arApiPost "Record.List" "domain_id=${domainID}&sub_domain=${subdomainv6}")
}

# 查询域名地址
# 参数: 待查询域名
arNslookup() {
    local lastIP=$(echo $returnDatav4|grep -Eo "(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])")
    echo $lastIP
}

arNslookup_v6() {
    # 获得ipv6
    local lastIP_v6=$(echo $returnDatav6|grep -E -o "\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*")
    echo $lastIP_v6
}

# 更新ipv4记录信息
arDdnsUpdate() {
    local hostIP=${1}
    local recordID recordRS recordCD
    # 获取记录ID
    recordID=$(echo $returnDatav4|sed 's/.\+\[{"id":"\([0-9]\+\)".\+/\1/')
    # 更新记录IP
    recordRS=$(arApiPost "Record.Modify" "domain_id=${domainID}&record_id=${recordID}&sub_domain=${subdomainv4}&value=${hostIP}&record_type=A&record_line=默认")
    recordCD=$(echo $recordRS | sed 's/.\+{"code":"\(\-\?[0-9]\+\)".\+/\1/')
    # 输出记录IP
    if [ "$recordCD" == "1" ]; then
        echo "SUCCEESS"
        echo $recordRS | sed 's/.\+"value":"\([0-9\.]\+\)".\+/\1/'
        return 0
    fi
    # 输出错误信息
    echo "ERROR CODE: ${recordCD}"
    echo $recordRS | sed 's/.\+,"message":"\([^"]\+\)".\+/\1/'
    return 1
}

# 更新ipv6记录信息
arDdnsUpdate_v6() {
    local hostIP_v6=${1}
    local recordID recordRS recordCD
    recordID=$(echo $returnDatav6|sed 's/.\+\[{"id":"\([0-9]\+\)".\+/\1/')
    # 更新记录IP
    recordRS=$(arApiPost "Record.Modify" "domain_id=${domainID}&record_id=${recordID}&sub_domain=${subdomainv6}&value=${hostIP_v6}&record_type=AAAA&record_line=默认")
    recordCD=$(echo -E $recordRS | sed 's/.\+"code":"\(\-\?[0-9]\+\)".\+/\1/')
    # 输出记录IP
    if [ "$recordCD" == "1" ]; then
        echo "SUCCESS"
        echo $recordRS | sed 's/.\+"value":"\([^"]\+\)".\+/\1/'
        return 0
    fi
    # 输出错误信息
    echo "ERROR CODE: ${recordCD}"
    echo $recordRS | sed 's/.\+"message":"\([^"]\+\)".\+/\1/'
    return 1
}

# 动态检查更新
# 参数: 主域名 子域名
arDdnsCheck() {
    # 全局变量
    domain=$1
    subdomainv4=$2
    subdomainv6=$3
    getIDs

    local postRS hostIP lastIP postRS_v6 hostIP_v6 lastIP_v6
    local v4ok=0
    local v6ok=0

    # ipv4
    if [ -n "$subdomainv4" ]; then
        hostIP=$(arIpAdress)
        echo "hostIP: ${hostIP}"
        lastIP=$(arNslookup)
        echo "lastIP: ${lastIP}"

        if [ "$lastIP" != "$hostIP" ]; then
            arDdnsUpdate ${hostIP}
            if [ $? -ne 0 ]; then
                v4ok=1
            fi
        else
            echo "SKIP"
            v4ok=1
        fi
    fi

    # ipv6
    if [ -n "subdomainv6" ]; then
        hostIP_v6=$(arIpAdress_v6)
        echo "hostIP_v6: ${hostIP_v6}"
        lastIP_v6=$(arNslookup_v6)
        echo "lastIP_v6: ${lastIP_v6}"

        if [ "$lastIP_v6" != "$hostIP_v6" ]; then
            arDdnsUpdate_v6 ${hostIP_v6}
            if [ $? -ne 0 ]; then
                v6ok=1
            fi
        else
            echo "SKIP"
            v6ok=1
        fi
    fi

    if [ $v4ok -eq 1 -o $v6ok -eq 1 ]; then
        /sbin/ddns_custom_updated 1
    else
        /sbin/ddns_custom_updated 0
    fi
}

###################################################
# 检查更新域名
# 指定 domain subdomainv4 subdomaipv6
# 不解析则不填，解析到主域名填@
arDdnsCheck "frostfall.cn" "" ""
